{"_id":"@aws/lambda-invoke-store","_rev":"3-b0ed3b8d8f4aeeda9befd8be151e7fc7","name":"@aws/lambda-invoke-store","dist-tags":{"latest":"0.1.0"},"versions":{"0.0.1":{"name":"@aws/lambda-invoke-store","version":"0.0.1","author":{"url":"http://aws.amazon.com","name":"Amazon Web Services"},"license":"Apache-2.0","_id":"@aws/lambda-invoke-store@0.0.1","maintainers":[{"name":"nosovsky","email":"nosovsky@amazon.com"},{"name":"aws-sdk-team","email":"aws-sdk-js@amazon.com"},{"name":"amzn-oss","email":"osa-3p@amazon.com"},{"name":"aws-sdk-bot","email":"aws-sdk-js-automation@amazon.com"},{"name":"awsxray","email":"aws-xray-sdk-node@amazon.com"},{"name":"aws-iot-sdk","email":"aws-sdk-common-runtime@amazon.com"},{"name":"aws-amplify-ops","email":"aws-amplify@amazon.com"},{"name":"zheallan","email":"zheallan@amazon.com"},{"name":"mohit0193","email":"mohit.ag0193@gmail.com"},{"name":"rishabh6788","email":"rishabhksingh@gmail.com"},{"name":"weicongs","email":"weicongs@amazon.com"},{"name":"sayaligaikawad","email":"gaiksaya@amazon.com"},{"name":"peterzhuamazon","email":"zhujiaxi@amazon.com"},{"name":"mattsb42-aws","email":"bullocm@amazon.com"},{"name":"forrest-not-gump","email":"colyerf@amazon.com"},{"name":"cayblood","email":"carl@youngbloods.org"},{"name":"evertonfraga","email":"effraga@amazon.com"},{"name":"osa-publish","email":"osa-3p+npm@amazon.com"},{"name":"amazon-q-cli-bot","email":"amazon-q-developer-cli@amazon.com"}],"homepage":"https://github.com/awslabs/aws-lambda-invoke-store","bugs":{"url":"https://github.com/awslabs/aws-lambda-invoke-store/issues"},"dist":{"shasum":"92d792a7dda250dfcb902e13228f37a81be57c8f","tarball":"https://registry.npmjs.org/@aws/lambda-invoke-store/-/lambda-invoke-store-0.0.1.tgz","fileCount":5,"integrity":"sha512-ORHRQ2tmvnBXc8t/X9Z8IcSbBA4xTLKuN873FopzklHMeqBst7YG0d+AX97inkvDX+NChYtSr+qGfcqGFaI8Zw==","signatures":[{"sig":"MEUCIB/nURzBj+8ZuHWpcX5aumjvk09nQyxLiDx6zlzKPbvhAiEA5ag0+keXKn59fVUYW929YtqXpufSqoDu1oXdiGHEzto=","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"unpackedSize":21455},"main":"./dist/invoke-store.js","types":"./dist/invoke-store.d.ts","engines":{"node":">=18.0.0"},"gitHead":"5d87f6731af1db745c9509dcdd051a9885baab7f","scripts":{"test":"vitest run","build":"tsc","clean":"rm -rf dist","test:watch":"vitest watch"},"_npmUser":{"name":"aws-sdk-bot","email":"aws-sdk-js-automation@amazon.com"},"repository":{"url":"git+https://github.com/awslabs/aws-lambda-invoke-store.git","type":"git"},"_npmVersion":"11.5.2","description":"Invoke scoped data storage for AWS Lambda Node.js Runtime Environment","directories":{},"_nodeVersion":"22.18.0","_hasShrinkwrap":false,"packageManager":"yarn@4.9.4","devDependencies":{"vitest":"^3.1.1","typescript":"~5.4.5","@types/node":"^18.19.112","@tsconfig/node18":"^18.2.4"},"_npmOperationalInternal":{"tmp":"tmp/lambda-invoke-store_0.0.1_1757096445487_0.33698064830589836","host":"s3://npm-registry-packages-npm-production"}},"0.0.2":{"name":"@aws/lambda-invoke-store","version":"0.0.2","author":{"url":"http://aws.amazon.com","name":"Amazon Web Services"},"license":"Apache-2.0","_id":"@aws/lambda-invoke-store@0.0.2","maintainers":[{"name":"nosovsky","email":"nosovsky@amazon.com"},{"name":"aws-sdk-team","email":"aws-sdk-js@amazon.com"},{"name":"amzn-oss","email":"osa-3p@amazon.com"},{"name":"aws-sdk-bot","email":"aws-sdk-js-automation@amazon.com"},{"name":"awsxray","email":"aws-xray-sdk-node@amazon.com"},{"name":"aws-iot-sdk","email":"aws-sdk-common-runtime@amazon.com"},{"name":"aws-amplify-ops","email":"aws-amplify@amazon.com"},{"name":"zheallan","email":"zheallan@amazon.com"},{"name":"mohit0193","email":"mohit.ag0193@gmail.com"},{"name":"rishabh6788","email":"rishabhksingh@gmail.com"},{"name":"weicongs","email":"weicongs@amazon.com"},{"name":"sayaligaikawad","email":"gaiksaya@amazon.com"},{"name":"peterzhuamazon","email":"zhujiaxi@amazon.com"},{"name":"mattsb42-aws","email":"bullocm@amazon.com"},{"name":"forrest-not-gump","email":"colyerf@amazon.com"},{"name":"cayblood","email":"carl@youngbloods.org"},{"name":"evertonfraga","email":"effraga@amazon.com"},{"name":"osa-publish","email":"osa-3p+npm@amazon.com"},{"name":"amazon-q-cli-bot","email":"amazon-q-developer-cli@amazon.com"}],"homepage":"https://github.com/awslabs/aws-lambda-invoke-store","bugs":{"url":"https://github.com/awslabs/aws-lambda-invoke-store/issues"},"dist":{"shasum":"af3e5aadf7ff606c68e5e143718263b832351940","tarball":"https://registry.npmjs.org/@aws/lambda-invoke-store/-/lambda-invoke-store-0.0.2.tgz","fileCount":5,"integrity":"sha512-KEBCixZMUHrg5QMFpDUIxiN54jM5uhLwLSQ2mG7lxW1ZW9PKrxf2+w+YqAZ02BTF7tku+ix7zqECnGW/FMPpPQ==","signatures":[{"sig":"MEQCIHlmmG9KPaCQqT+5L48NZ/IE83DRualtc/e3EddzJ1LPAiB0R2sovo1T/2g6PmsFZ15E9T/w6TB/G5prQ9wXF/suSA==","keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@aws%2flambda-invoke-store@0.0.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":21539},"main":"./dist/invoke-store.js","types":"./dist/invoke-store.d.ts","engines":{"node":">=18.0.0"},"gitHead":"d20855fb7eea7a9784e39fb62352daba478e1225","scripts":{"test":"vitest run","build":"tsc","clean":"rm -rf dist","release":"yarn build && changeset publish","test:watch":"vitest watch"},"_npmUser":{"name":"GitHub Actions","email":"npm-oidc-no-reply@github.com","trustedPublisher":{"id":"github","oidcConfigId":"oidc:bbc058d4-6ae3-455f-9782-2aa7cdf4f9e9"}},"repository":{"url":"git+https://github.com/awslabs/aws-lambda-invoke-store.git","type":"git"},"_npmVersion":"11.5.1","description":"Invoke scoped data storage for AWS Lambda Node.js Runtime Environment","directories":{},"_nodeVersion":"24.7.0","_hasShrinkwrap":false,"packageManager":"yarn@4.9.4","devDependencies":{"vitest":"^3.1.1","typescript":"~5.4.5","@types/node":"^18.19.112","@changesets/cli":"^2.29.6","@tsconfig/node18":"^18.2.4"},"_npmOperationalInternal":{"tmp":"tmp/lambda-invoke-store_0.0.2_1757436046750_0.4795571525181317","host":"s3://npm-registry-packages-npm-production"}},"0.1.0":{"name":"@aws/lambda-invoke-store","version":"0.1.0","description":"Invoke scoped data storage for AWS Lambda Node.js Runtime Environment","homepage":"https://github.com/awslabs/aws-lambda-invoke-store","main":"./dist/invoke-store.js","types":"./dist/invoke-store.d.ts","repository":{"type":"git","url":"git+https://github.com/awslabs/aws-lambda-invoke-store.git"},"license":"Apache-2.0","author":{"name":"Amazon Web Services","url":"http://aws.amazon.com"},"scripts":{"build":"tsc","clean":"rm -rf dist","test":"vitest run","test:watch":"vitest watch","release":"yarn build && changeset publish"},"devDependencies":{"@changesets/cli":"^2.29.6","@tsconfig/node18":"^18.2.4","@types/node":"^18.19.112","typescript":"~5.4.5","vitest":"^3.1.1"},"engines":{"node":">=18.0.0"},"packageManager":"yarn@4.9.4","_id":"@aws/lambda-invoke-store@0.1.0","gitHead":"b0b71167de8410d09ed4d6f4fe93c4d02d1d42d7","bugs":{"url":"https://github.com/awslabs/aws-lambda-invoke-store/issues"},"_nodeVersion":"24.8.0","_npmVersion":"11.6.0","dist":{"integrity":"sha512-I1y5yahbSFTfKldV4qoKv2IEZ20QOhn5rPvWwGnswZ8hssN7tsLANLg9tL8dp2klz2MZDGL5jZrvBwplIWtM8A==","shasum":"7f924585856c9d3bf244e936526aa05bb1c41652","tarball":"https://registry.npmjs.org/@aws/lambda-invoke-store/-/lambda-invoke-store-0.1.0.tgz","fileCount":5,"unpackedSize":21993,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@aws%2flambda-invoke-store@0.1.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIFXPOHcZhAoXx+v3jceq5ceShgeES4YmWjEvPPoMVAQQAiEAhIcgc7/dlom9MckBLrAdA8xltQx8W94S0bcF/0cewOs="}]},"_npmUser":{"name":"GitHub Actions","email":"npm-oidc-no-reply@github.com","trustedPublisher":{"id":"github","oidcConfigId":"oidc:bbc058d4-6ae3-455f-9782-2aa7cdf4f9e9"}},"directories":{},"maintainers":[{"name":"nosovsky","email":"nosovsky@amazon.com"},{"name":"aws-sdk-team","email":"aws-sdk-js@amazon.com"},{"name":"amzn-oss","email":"osa-3p@amazon.com"},{"name":"aws-sdk-bot","email":"aws-sdk-js-automation@amazon.com"},{"name":"awsxray","email":"aws-xray-sdk-node@amazon.com"},{"name":"aws-iot-sdk","email":"aws-sdk-common-runtime@amazon.com"},{"name":"aws-amplify-ops","email":"aws-amplify@amazon.com"},{"name":"zheallan","email":"zheallan@amazon.com"},{"name":"mohit0193","email":"mohit.ag0193@gmail.com"},{"name":"rishabh6788","email":"rishabhksingh@gmail.com"},{"name":"weicongs","email":"weicongs@amazon.com"},{"name":"sayaligaikawad","email":"gaiksaya@amazon.com"},{"name":"peterzhuamazon","email":"zhujiaxi@amazon.com"},{"name":"mattsb42-aws","email":"bullocm@amazon.com"},{"name":"forrest-not-gump","email":"colyerf@amazon.com"},{"name":"cayblood","email":"carl@youngbloods.org"},{"name":"evertonfraga","email":"effraga@amazon.com"},{"name":"osa-publish","email":"osa-3p+npm@amazon.com"},{"name":"amazon-q-cli-bot","email":"amazon-q-developer-cli@amazon.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/lambda-invoke-store_0.1.0_1757610849363_0.49179426706617946"},"_hasShrinkwrap":false}},"time":{"created":"2025-09-05T18:20:45.348Z","modified":"2025-09-11T17:14:10.193Z","0.0.1":"2025-09-05T18:20:45.678Z","0.0.2":"2025-09-09T16:40:46.927Z","0.1.0":"2025-09-11T17:14:09.605Z"},"bugs":{"url":"https://github.com/awslabs/aws-lambda-invoke-store/issues"},"author":{"name":"Amazon Web Services","url":"http://aws.amazon.com"},"license":"Apache-2.0","homepage":"https://github.com/awslabs/aws-lambda-invoke-store","repository":{"type":"git","url":"git+https://github.com/awslabs/aws-lambda-invoke-store.git"},"description":"Invoke scoped data storage for AWS Lambda Node.js Runtime Environment","maintainers":[{"name":"nosovsky","email":"nosovsky@amazon.com"},{"name":"aws-sdk-team","email":"aws-sdk-js@amazon.com"},{"name":"amzn-oss","email":"osa-3p@amazon.com"},{"name":"aws-sdk-bot","email":"aws-sdk-js-automation@amazon.com"},{"name":"awsxray","email":"aws-xray-sdk-node@amazon.com"},{"name":"aws-iot-sdk","email":"aws-sdk-common-runtime@amazon.com"},{"name":"aws-amplify-ops","email":"aws-amplify@amazon.com"},{"name":"zheallan","email":"zheallan@amazon.com"},{"name":"mohit0193","email":"mohit.ag0193@gmail.com"},{"name":"rishabh6788","email":"rishabhksingh@gmail.com"},{"name":"weicongs","email":"weicongs@amazon.com"},{"name":"sayaligaikawad","email":"gaiksaya@amazon.com"},{"name":"peterzhuamazon","email":"zhujiaxi@amazon.com"},{"name":"mattsb42-aws","email":"bullocm@amazon.com"},{"name":"forrest-not-gump","email":"colyerf@amazon.com"},{"name":"cayblood","email":"carl@youngbloods.org"},{"name":"evertonfraga","email":"effraga@amazon.com"},{"name":"osa-publish","email":"osa-3p+npm@amazon.com"},{"name":"amazon-q-cli-bot","email":"amazon-q-developer-cli@amazon.com"}],"readme":"# Node.js Invoke Store for AWS Lambda\n\n`@aws/lambda-invoke-store` provides a generic, per-invocation context store for\nAWS Lambda Node.js Runtime Environment. It enables storing and retrieving data\nwithin the scope of a single Lambda invocation, with proper isolation between\nconcurrent executions.\n\n## Features\n\n- **Invocation Isolation**: Safely store and retrieve data within a single Lambda invocation.\n- **Protected Lambda Context**: Built-in protection for Lambda execution metadata (requestId, [traceId](https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-traces))\n- **Custom Data Storage**: Store any custom data within the invocation context\n- **Async/Await Support**: Full support for asynchronous operations with context preservation\n- **Type Safety**: Complete TypeScript type definitions\n- **Singleton Pattern**: Ensures a single shared instance across all imports\n- **Global Namespace Integration**: Integrates with the Lambda runtime global namespace\n\n## Installation\n\n```bash\nnpm install @aws/lambda-invoke-store\n```\n\n## Quick Start\n\n> **Note**: In the AWS Lambda environment, the Runtime Interface Client (RIC) automatically initializes the InvokeStore context at the beginning of each invocation. Lambda function developers typically don't need to call `InvokeStore.run()` directly.\n\n```typescript\nimport { InvokeStore } from \"@aws/lambda-invoke-store\";\n\n// Lambda handler with invoke store\nexport const handler = async (event, context) => {\n  // The RIC has already initialized the InvokeStore with requestId and X-Ray traceId\n\n  // Access Lambda context data\n  console.log(`Processing request: ${InvokeStore.getRequestId()}`);\n\n  // Store custom data\n  InvokeStore.set(\"userId\", event.userId);\n\n  // Data persists across async operations\n  await processData(event);\n\n  // Retrieve custom data\n  const userId = InvokeStore.get(\"userId\");\n\n  return {\n    requestId: InvokeStore.getRequestId(),\n    userId,\n  };\n};\n\n// Context is preserved in async operations\nasync function processData(event) {\n  // Still has access to the same invoke context\n  console.log(`Processing in same context: ${InvokeStore.getRequestId()}`);\n\n  // Can set additional data\n  InvokeStore.set(\"processedData\", { result: \"success\" });\n}\n```\n\n## API Reference\n\n### InvokeStore.getContext()\n\nReturns the complete current context or `undefined` if outside a context.\n\n```typescript\nconst context = InvokeStore.getContext();\n```\n\n### InvokeStore.get(key)\n\nGets a value from the current context.\n\n```typescript\nconst requestId = InvokeStore.get(InvokeStore.PROTECTED_KEYS.REQUEST_ID);\nconst customValue = InvokeStore.get(\"customKey\");\n```\n\n### InvokeStore.set(key, value)\n\nSets a custom value in the current context. Protected Lambda fields cannot be modified.\n\n```typescript\nInvokeStore.set(\"userId\", \"user-123\");\nInvokeStore.set(\"timestamp\", Date.now());\n\n// This will throw an error:\n// InvokeStore.set(InvokeStore.PROTECTED_KEYS.REQUEST_ID, 'new-id');\n```\n\n### InvokeStore.getRequestId()\n\nConvenience method to get the current request ID.\n\n```typescript\nconst requestId = InvokeStore.getRequestId(); // Returns '-' if outside context\n```\n\n### InvokeStore.getTenantId()\n\nConvenience method to get the tenant ID.\n\n```typescript\nconst requestId = InvokeStore.getTenantId();\n```\n\n### InvokeStore.getXRayTraceId()\n\nConvenience method to get the current [X-Ray trace ID](https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-traces). This ID is used for distributed tracing across AWS services.\n\n```typescript\nconst traceId = InvokeStore.getXRayTraceId(); // Returns undefined if not set or outside context\n```\n\n### InvokeStore.hasContext()\n\nChecks if code is currently running within an invoke context.\n\n```typescript\nif (InvokeStore.hasContext()) {\n  // We're inside an invoke context\n}\n```\n\n### InvokeStore.run(context, fn)\n\n> **Note**: This method is primarily used by the Lambda Runtime Interface Client (RIC) to initialize the context for each invocation. Lambda function developers typically don't need to call this method directly.\n\nRuns a function within an invoke context.\n\n```typescript\nInvokeStore.run(\n  {\n    [InvokeStore.PROTECTED_KEYS.REQUEST_ID]: \"request-123\",\n    [InvokeStore.PROTECTED_KEYS.X_RAY_TRACE_ID]: \"trace-456\", // Optional X-Ray trace ID\n    customField: \"value\", // Optional custom fields\n  },\n  () => {\n    // Function to execute within context\n  }\n);\n```\n\n## Integration with AWS Lambda Runtime\n\nThe `@aws/lambda-invoke-store` package is designed to be integrated with the AWS Lambda Node.js Runtime Interface Client (RIC). The RIC automatically:\n\n1. Initializes the InvokeStore context at the beginning of each Lambda invocation\n2. Sets the `requestId` and [X-Ray `traceId`](https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-traces) in the context\n3. Ensures proper context isolation between concurrent invocations\n4. Cleans up the context after the invocation completes\n\nLambda function developers can focus on using the context without worrying about initialization or cleanup.\n\n## Global Namespace and Singleton Pattern\n\nThe InvokeStore uses a singleton pattern to ensure that all imports of the module use the same instance, which is critical for maintaining proper context isolation across different parts of your application.\n\n### Global Namespace Integration\n\nThe InvokeStore integrates with the Lambda runtime's global namespace:\n\n```typescript\n// The InvokeStore is available globally\nconst globalInstance = globalThis.awslambda.InvokeStore;\n```\n\nThis enables seamless integration between the Lambda Runtime Interface Client (RIC), AWS SDK, and your function code, ensuring they all share the same context.\n\n### Environment Variable Opt-Out\n\nIf you prefer not to modify the global namespace, you can opt out by setting the environment variable:\n\n```bash\n# Disable global namespace modification\nAWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA=1\n```\n\nWhen this environment variable is set, the InvokeStore will still function correctly, but it won't be stored in the global namespace.\n\n## Security\n\nSee [CONTRIBUTING](CONTRIBUTING.md#security-issue-notifications) for more information.\n\n## License\n\nThis project is licensed under the Apache-2.0 License.\n","readmeFilename":"README.md"}